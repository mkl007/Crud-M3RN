{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HelpComputers\\\\Desktop\\\\Notess_Crud_no_aut\\\\fronten\\\\src\\\\context\\\\TaskContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { createTaskRequest, getTasksRequest } from \"../api/task\";\nimport { useAuth } from \"./authContext\";\n// import { registerRequest, loginRequest, verifyTokenRequest } from \"../api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContent = /*#__PURE__*/createContext();\nexport const useTasks = () => {\n  _s();\n  const context = useContext(TaskContent);\n  if (!context) {\n    return new Error(\"useTaks must be used within TaskProvider\");\n  }\n  return context;\n};\n_s(useTasks, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function TaskProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  // const [user, setUser] = useState(null)\n\n  const {\n    user\n  } = useAuth();\n  const createTask = async task => {\n    const res = await createTaskRequest(task);\n    console.log(res);\n  };\n  const getTasks = async () => {\n    try {\n      const res = await getTasksRequest();\n      // setUser(user)\n      setTasks(res.data);\n      console.log(res);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContent.Provider, {\n    value: {\n      tasks,\n      createTask,\n      getTasks,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s2(TaskProvider, \"ZfPIgn+qbFDMvvXcyxodPOSqM2g=\", false, function () {\n  return [useAuth];\n});\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useContext","useState","createTaskRequest","getTasksRequest","useAuth","jsxDEV","_jsxDEV","TaskContent","useTasks","_s","context","Error","TaskProvider","_ref","_s2","children","tasks","setTasks","isAuthenticated","setIsAuthenticated","user","createTask","task","res","console","log","getTasks","data","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HelpComputers/Desktop/Notess_Crud_no_aut/fronten/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { createTaskRequest, getTasksRequest } from \"../api/task\";\r\nimport { useAuth } from \"./authContext\";\r\n// import { registerRequest, loginRequest, verifyTokenRequest } from \"../api/auth\";\r\n\r\n\r\nconst TaskContent = createContext();\r\n\r\nexport const useTasks = () => {\r\n    const context = useContext(TaskContent);\r\n\r\n    if (!context) {\r\n        return new Error(\"useTaks must be used within TaskProvider\");\r\n    }\r\n    return context;\r\n}\r\n\r\n\r\n\r\nexport function TaskProvider({ children }) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n       // const [user, setUser] = useState(null)\r\n\r\n    const { user } = useAuth()\r\n\r\n\r\n    const createTask = async (task) => {\r\n        const res = await createTaskRequest(task);\r\n        console.log(res)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        try {\r\n            const res = await getTasksRequest();\r\n            // setUser(user)\r\n            setTasks(res.data)\r\n            console.log(res)\r\n            setIsAuthenticated(true)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <TaskContent.Provider value={{ tasks, createTask, getTasks, isAuthenticated }}>\r\n            {children}\r\n        </TaskContent.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,aAAa;AAChE,SAASC,OAAO,QAAQ,eAAe;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EAEvC,IAAI,CAACG,OAAO,EAAE;IACV,OAAO,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAChE;EACA,OAAOD,OAAO;AAClB,CAAC;AAAAD,EAAA,CAPYD,QAAQ;AAWrB,OAAO,SAASI,YAAYA,CAAAC,IAAA,EAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC1D;;EAEH,MAAM;IAAEmB;EAAK,CAAC,GAAGhB,OAAO,CAAC,CAAC;EAG1B,MAAMiB,UAAU,GAAG,MAAOC,IAAI,IAAK;IAC/B,MAAMC,GAAG,GAAG,MAAMrB,iBAAiB,CAACoB,IAAI,CAAC;IACzCE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMH,GAAG,GAAG,MAAMpB,eAAe,CAAC,CAAC;MACnC;MACAc,QAAQ,CAACM,GAAG,CAACI,IAAI,CAAC;MAClBH,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBJ,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACtB;EACJ,CAAC;EACD,oBACItB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEK,UAAU;MAAEK,QAAQ;MAAER;IAAgB,CAAE;IAAAH,QAAA,EACzEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACpB,GAAA,CA7BeF,YAAY;EAAA,QAKPR,OAAO;AAAA;AAAA+B,EAAA,GALZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}